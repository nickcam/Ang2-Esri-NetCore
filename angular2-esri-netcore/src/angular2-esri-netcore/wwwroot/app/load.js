//This file basically bootstraps the ESRI ArcGIS api to work using system.js.
//All ArcGIS modules required should be added to the deps array. 
//declare aliases for paths
var paths = {
    "lib:": "lib/"
};
var map = {
    app: 'app',
    // angular bundles
    '@angular/core': 'lib:@angular/core/bundles/core.umd.js',
    '@angular/common': 'lib:@angular/common/bundles/common.umd.js',
    '@angular/compiler': 'lib:@angular/compiler/bundles/compiler.umd.js',
    '@angular/platform-browser': 'lib:@angular/platform-browser/bundles/platform-browser.umd.js',
    '@angular/platform-browser-dynamic': 'lib:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',
    '@angular/http': 'lib:@angular/http/bundles/http.umd.js',
    '@angular/router': 'lib:@angular/router/bundles/router.umd.js',
    '@angular/forms': 'lib:@angular/forms/bundles/forms.umd.js',
    // other libraries
    'rxjs': 'lib:rxjs',
    'angular-in-memory-web-api': 'lib:angular-in-memory-web-api',
};
var packages = {
    app: {
        main: './main.js',
        defaultExtension: 'js'
    },
    rxjs: {
        defaultExtension: 'js'
    },
    'angular-in-memory-web-api': {
        main: './index.js',
        defaultExtension: 'js'
    }
};
// configure SystemJS
System.config({
    paths: paths,
    map: map,
    packages: packages
});
//use esri-system-js to laod the esri modules, then kick off loading the app package defined in SystemJS.
esriSystem.register([
    'esri/Map',
    'esri/views/MapView',
    'esri/layers/GraphicsLayer',
    'esri/geometry/Point',
    'esri/symbols/SimpleMarkerSymbol',
    'esri/Graphic',
    'esri/Color',
    'esri/core/accessorSupport/decorators'
], function () {
    // bootstrap the app
    System.import('app')
        .catch(function (err) {
        console.error('%O%', err);
    });
}, {
    maintainModuleNames: true
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2FwcC9sb2FkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLDZFQUE2RTtBQUM3RSxpRUFBaUU7QUFRakUsMkJBQTJCO0FBQzNCLElBQUksS0FBSyxHQUFHO0lBQ1IsTUFBTSxFQUFFLE1BQU07Q0FDakIsQ0FBQTtBQUVELElBQUksR0FBRyxHQUFHO0lBRU4sR0FBRyxFQUFFLEtBQUs7SUFDVixrQkFBa0I7SUFDbEIsZUFBZSxFQUFFLHVDQUF1QztJQUN4RCxpQkFBaUIsRUFBRSwyQ0FBMkM7SUFDOUQsbUJBQW1CLEVBQUUsK0NBQStDO0lBQ3BFLDJCQUEyQixFQUFFLCtEQUErRDtJQUM1RixtQ0FBbUMsRUFBRSwrRUFBK0U7SUFDcEgsZUFBZSxFQUFFLHVDQUF1QztJQUN4RCxpQkFBaUIsRUFBRSwyQ0FBMkM7SUFDOUQsZ0JBQWdCLEVBQUUseUNBQXlDO0lBRTNELGtCQUFrQjtJQUNsQixNQUFNLEVBQUUsVUFBVTtJQUNsQiwyQkFBMkIsRUFBRSwrQkFBK0I7Q0FFL0QsQ0FBQTtBQUVELElBQUksUUFBUSxHQUFHO0lBQ1gsR0FBRyxFQUFFO1FBQ0QsSUFBSSxFQUFFLFdBQVc7UUFDakIsZ0JBQWdCLEVBQUUsSUFBSTtLQUN6QjtJQUNELElBQUksRUFBRTtRQUNGLGdCQUFnQixFQUFFLElBQUk7S0FDekI7SUFDRCwyQkFBMkIsRUFBRTtRQUN6QixJQUFJLEVBQUUsWUFBWTtRQUNsQixnQkFBZ0IsRUFBRSxJQUFJO0tBQ3pCO0NBQ0osQ0FBQTtBQUVELHFCQUFxQjtBQUNyQixNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ1YsS0FBSyxFQUFFLEtBQUs7SUFDWixHQUFHLEVBQUUsR0FBRztJQUNSLFFBQVEsRUFBRSxRQUFRO0NBQ3JCLENBQUMsQ0FBQztBQUdILHlHQUF5RztBQUN6RyxVQUFVLENBQUMsUUFBUSxDQUFDO0lBQ2hCLFVBQVU7SUFDVixvQkFBb0I7SUFDcEIsMkJBQTJCO0lBQzNCLHFCQUFxQjtJQUNyQixpQ0FBaUM7SUFDakMsY0FBYztJQUNkLFlBQVk7SUFDWixzQ0FBc0M7Q0FDekMsRUFDRztJQUNJLG9CQUFvQjtJQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztTQUNmLEtBQUssQ0FBQyxVQUFVLEdBQVE7UUFDckIsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQyxDQUFDLENBQUM7QUFDWCxDQUFDLEVBQUU7SUFDQyxtQkFBbUIsRUFBRSxJQUFJO0NBQzVCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vL1RoaXMgZmlsZSBiYXNpY2FsbHkgYm9vdHN0cmFwcyB0aGUgRVNSSSBBcmNHSVMgYXBpIHRvIHdvcmsgdXNpbmcgc3lzdGVtLmpzLlxyXG4vL0FsbCBBcmNHSVMgbW9kdWxlcyByZXF1aXJlZCBzaG91bGQgYmUgYWRkZWQgdG8gdGhlIGRlcHMgYXJyYXkuIFxyXG5cclxuZGVjbGFyZSB2YXIgU3lzdGVtOiBhbnk7XHJcbmRlY2xhcmUgdmFyIF9fbW9kdWxlTmFtZTogc3RyaW5nOyAvL3RoaXMgaXMgc28gd2UgY2FuIHVzZSByZWxhdGl2ZSBwYXRocyB0byB0ZW1wbGF0ZXMgYW5kIHN0eWxlcyB3aXRoaW4gY29tcG9uZW50cy4gT25seSByZXF1aXJlZCBpZiB1c2luZyBTeXN0ZW1KUyBtb2R1bGUuXHJcbmRlY2xhcmUgdmFyIG1vZHVsZTogYW55OyAvL3RoaXMgaXMgc28gd2UgY2FuIHVzZSByZWxhdGl2ZSBwYXRocyB0byB0ZW1wYWx0ZXMgYW5kIHN0eWxlcyB3aXRoaW4gY29tcG9uZW50cy4gT25seSByZXF1aXJlZCBpZiB1c2luZyBjb21tb25qcyBtb2R1bGUuXHJcblxyXG5kZWNsYXJlIHZhciBlc3JpU3lzdGVtOiBhbnk7IC8vYW1iaWVudCBkZWNsYXJhdGlvbiBmb3IgZXNyaVN5c3RlbS5cclxuIFxyXG4vL2RlY2xhcmUgYWxpYXNlcyBmb3IgcGF0aHNcclxubGV0IHBhdGhzID0ge1xyXG4gICAgXCJsaWI6XCI6IFwibGliL1wiXHJcbn1cclxuXHJcbmxldCBtYXAgPSB7XHJcblxyXG4gICAgYXBwOiAnYXBwJywgLy8gJ2N1c3RvbSBkaXN0JyxcclxuICAgIC8vIGFuZ3VsYXIgYnVuZGxlc1xyXG4gICAgJ0Bhbmd1bGFyL2NvcmUnOiAnbGliOkBhbmd1bGFyL2NvcmUvYnVuZGxlcy9jb3JlLnVtZC5qcycsXHJcbiAgICAnQGFuZ3VsYXIvY29tbW9uJzogJ2xpYjpAYW5ndWxhci9jb21tb24vYnVuZGxlcy9jb21tb24udW1kLmpzJyxcclxuICAgICdAYW5ndWxhci9jb21waWxlcic6ICdsaWI6QGFuZ3VsYXIvY29tcGlsZXIvYnVuZGxlcy9jb21waWxlci51bWQuanMnLFxyXG4gICAgJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInOiAnbGliOkBhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYnVuZGxlcy9wbGF0Zm9ybS1icm93c2VyLnVtZC5qcycsXHJcbiAgICAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci1keW5hbWljJzogJ2xpYjpAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyLWR5bmFtaWMvYnVuZGxlcy9wbGF0Zm9ybS1icm93c2VyLWR5bmFtaWMudW1kLmpzJyxcclxuICAgICdAYW5ndWxhci9odHRwJzogJ2xpYjpAYW5ndWxhci9odHRwL2J1bmRsZXMvaHR0cC51bWQuanMnLFxyXG4gICAgJ0Bhbmd1bGFyL3JvdXRlcic6ICdsaWI6QGFuZ3VsYXIvcm91dGVyL2J1bmRsZXMvcm91dGVyLnVtZC5qcycsXHJcbiAgICAnQGFuZ3VsYXIvZm9ybXMnOiAnbGliOkBhbmd1bGFyL2Zvcm1zL2J1bmRsZXMvZm9ybXMudW1kLmpzJyxcclxuXHJcbiAgICAvLyBvdGhlciBsaWJyYXJpZXNcclxuICAgICdyeGpzJzogJ2xpYjpyeGpzJyxcclxuICAgICdhbmd1bGFyLWluLW1lbW9yeS13ZWItYXBpJzogJ2xpYjphbmd1bGFyLWluLW1lbW9yeS13ZWItYXBpJyxcclxuICAgICAgXHJcbn0gIFxyXG4gXHJcbmxldCBwYWNrYWdlcyA9IHtcclxuICAgIGFwcDoge1xyXG4gICAgICAgIG1haW46ICcuL21haW4uanMnLFxyXG4gICAgICAgIGRlZmF1bHRFeHRlbnNpb246ICdqcydcclxuICAgIH0sXHJcbiAgICByeGpzOiB7XHJcbiAgICAgICAgZGVmYXVsdEV4dGVuc2lvbjogJ2pzJ1xyXG4gICAgfSxcclxuICAgICdhbmd1bGFyLWluLW1lbW9yeS13ZWItYXBpJzoge1xyXG4gICAgICAgIG1haW46ICcuL2luZGV4LmpzJyxcclxuICAgICAgICBkZWZhdWx0RXh0ZW5zaW9uOiAnanMnXHJcbiAgICB9XHJcbn1cclxuICAgICBcclxuLy8gY29uZmlndXJlIFN5c3RlbUpTXHJcblN5c3RlbS5jb25maWcoe1xyXG4gICAgcGF0aHM6IHBhdGhzLFxyXG4gICAgbWFwOiBtYXAsXHJcbiAgICBwYWNrYWdlczogcGFja2FnZXNcclxufSk7XHJcblxyXG5cclxuLy91c2UgZXNyaS1zeXN0ZW0tanMgdG8gbGFvZCB0aGUgZXNyaSBtb2R1bGVzLCB0aGVuIGtpY2sgb2ZmIGxvYWRpbmcgdGhlIGFwcCBwYWNrYWdlIGRlZmluZWQgaW4gU3lzdGVtSlMuXHJcbmVzcmlTeXN0ZW0ucmVnaXN0ZXIoW1xyXG4gICAgJ2VzcmkvTWFwJyxcclxuICAgICdlc3JpL3ZpZXdzL01hcFZpZXcnLFxyXG4gICAgJ2VzcmkvbGF5ZXJzL0dyYXBoaWNzTGF5ZXInLFxyXG4gICAgJ2VzcmkvZ2VvbWV0cnkvUG9pbnQnLFxyXG4gICAgJ2Vzcmkvc3ltYm9scy9TaW1wbGVNYXJrZXJTeW1ib2wnLFxyXG4gICAgJ2VzcmkvR3JhcGhpYycsXHJcbiAgICAnZXNyaS9Db2xvcicsXHJcbiAgICAnZXNyaS9jb3JlL2FjY2Vzc29yU3VwcG9ydC9kZWNvcmF0b3JzJ1xyXG5dLCBcclxuICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBib290c3RyYXAgdGhlIGFwcFxyXG4gICAgICAgIFN5c3RlbS5pbXBvcnQoJ2FwcCcpXHJcbiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyOiBhbnkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJyVPJScsIGVycik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfSwge1xyXG4gICAgICAgIG1haW50YWluTW9kdWxlTmFtZXM6IHRydWVcclxuICAgIH0pO1xyXG5cclxuXHJcblxyXG4iXX0=